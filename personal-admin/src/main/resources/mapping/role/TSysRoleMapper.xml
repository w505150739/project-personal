<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.personal.role.mapper.TSysRoleMapper">


    <resultMap type="com.personal.role.entity.TSysRoleEntity" id="tSysRoleMap">
        <result property="id" column="id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleDesc" column="role_desc"/>
        <result property="status" column="status"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="createUser" column="create_user"/>
        <result property="updateUser" column="update_user"/>
    </resultMap>

    <sql id="Base_Column_List" >
		id, 
		role_name, 
		role_desc, 
		status, 
		create_time, 
		update_time, 
		create_user, 
		update_user
    </sql>

	<select id="get" resultType="com.personal.role.entity.TSysRoleEntity" resultMap="tSysRoleMap">
		select
		<include refid="Base_Column_List" />
		from t_sys_role t
		where t.status = 1
		and id = #{value}
	</select>

	<select id="queryList" resultType="com.personal.role.entity.TSysRoleEntity" resultMap="tSysRoleMap">
		select
		<include refid="Base_Column_List" />
		from t_sys_rolet
        where t.status = 1
        order by t.create_time desc
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="queryTotal" resultType="int">
		select count(*) from t_sys_role t where t.status = 1
	</select>
	 
	<insert id="save" parameterType="com.personal.role.entity.TSysRoleEntity" useGeneratedKeys="true" keyProperty="id">
		insert into t_sys_role
		(
			`role_name`, 
			`role_desc`, 
			`status`, 
			`create_time`, 
			`update_time`, 
			`create_user`, 
			`update_user`
		)
		values
		(
			#{roleName}, 
			#{roleDesc}, 
			#{status}, 
			#{createTime}, 
			#{updateTime}, 
			#{createUser}, 
			#{updateUser}
		)
	</insert>
	 
	<update id="update" parameterType="com.personal.role.entity.TSysRoleEntity">
		update t_sys_role 
		<set>
			<if test="roleName != null">`role_name` = #{roleName}, </if>
			<if test="roleDesc != null">`role_desc` = #{roleDesc}, </if>
			<if test="status != null">`status` = #{status}, </if>
			<if test="createTime != null">`create_time` = #{createTime}, </if>
			<if test="updateTime != null">`update_time` = #{updateTime}, </if>
			<if test="createUser != null">`create_user` = #{createUser}, </if>
			<if test="updateUser != null">`update_user` = #{updateUser}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="deleteById">
		update t_sys_role set status = 0 where id = #{id}
	</delete>

</mapper>