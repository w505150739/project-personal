package ${package}.controller;

import java.util.List;
import java.util.Map;

import com.personal.common.util.LogUtil;
import com.personal.common.util.result.ResultData;
import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.personal.common.base.BaseController;
import ${package}.entity.${className}Entity;
import ${package}.service.${className}Service;
import ${utils}.PageUtil;
import ${utils}.Query;
import ${utils}.result.ResultData;


/**
 * ${comments}
 * 
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${pathName}")
public class ${className}Controller extends BaseController{

    private static LogUtil logger = LogUtil.getLogger(${className}Controller.class);

	@Autowired
	private ${className}Service ${classname}Service;
	
	/**
	 * 列表
	 */
	@RequestMapping("/list")
	@RequiresPermissions("${pathName}:list")
	public ResultData list(@RequestParam Map<String, Object> params){
        ResultData result=new ResultData();
		//查询列表数据
        Query query = new Query(params);

		List<${className}Entity> ${classname}List = ${classname}Service.queryList(query);
		int total = ${classname}Service.queryTotal(query);
		result.setTotal(total);
		result.setRowLength(query.getLimit());
		PageUtil pageUtil = new PageUtil((query.getPage() - 1) * limit, query.getLimit(), ${classname}List, total);
        result.setData(pageUtil);
		return result;
	}
	
	
	/**
	 * 信息
	 */
	@RequestMapping("/info/{${pk.attrname}}")
	@RequiresPermissions("${pathName}:info")
	public ResultData info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){

	    ResultData result = new ResultData();

		${className}Entity ${classname} = ${classname}Service.queryObject(${pk.attrname});

		result.setData(${classname});
		return result;
	}
	
	/**
	 * 保存
	 */
	@RequestMapping("/save")
	@RequiresPermissions("${pathName}:save")
	public ResultData save(@RequestBody ${className}Entity ${classname}){
        ResultData result = new ResultData();

		${classname}Service.save(${classname});

		result.setMessage("保存成功！");

		return result;
	}
	
	/**
	 * 修改
	 */
	@RequestMapping("/update")
	@RequiresPermissions("${pathName}:update")
	public ResultData update(@RequestBody ${className}Entity ${classname}){

	    ResultData result = new ResultData();

		${classname}Service.update(${classname});

        result.setMessage("更新成功！");

		return result;
	}
	
	/**
	 * 删除
	 */
	@RequestMapping("/delete")
	@RequiresPermissions("${pathName}:delete")
	public ResultData delete(@RequestBody ${pk.attrType}[] ${pk.attrname}s){

        ResultData result = new ResultData();

		${classname}Service.deleteBatch(${pk.attrname}s);

        result.setMessage("删除成功！");
		return result;
	}
	
}
